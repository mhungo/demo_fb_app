// Generated by view binder compiler. Do not edit!
package org.geometerplus.zlibrary.ui.android.aplicatii.romanesti.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.geometerplus.zlibrary.ui.android.aplicatii.romanesti.R;

public final class BookPopupBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final OkCancelButtonsBinding bookPopupButtons;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-large/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ImageView bookPopupCover;

  @NonNull
  public final TextView bookPopupDescriptionText;

  @NonNull
  public final TextView bookPopupHeaderText;

  private BookPopupBinding(@NonNull LinearLayout rootView,
      @NonNull OkCancelButtonsBinding bookPopupButtons, @Nullable ImageView bookPopupCover,
      @NonNull TextView bookPopupDescriptionText, @NonNull TextView bookPopupHeaderText) {
    this.rootView = rootView;
    this.bookPopupButtons = bookPopupButtons;
    this.bookPopupCover = bookPopupCover;
    this.bookPopupDescriptionText = bookPopupDescriptionText;
    this.bookPopupHeaderText = bookPopupHeaderText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BookPopupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BookPopupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.book_popup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BookPopupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.book_popup_buttons;
      View bookPopupButtons = ViewBindings.findChildViewById(rootView, id);
      if (bookPopupButtons == null) {
        break missingId;
      }
      OkCancelButtonsBinding binding_bookPopupButtons = OkCancelButtonsBinding.bind(bookPopupButtons);

      id = R.id.book_popup_cover;
      ImageView bookPopupCover = ViewBindings.findChildViewById(rootView, id);

      id = R.id.book_popup_description_text;
      TextView bookPopupDescriptionText = ViewBindings.findChildViewById(rootView, id);
      if (bookPopupDescriptionText == null) {
        break missingId;
      }

      id = R.id.book_popup_header_text;
      TextView bookPopupHeaderText = ViewBindings.findChildViewById(rootView, id);
      if (bookPopupHeaderText == null) {
        break missingId;
      }

      return new BookPopupBinding((LinearLayout) rootView, binding_bookPopupButtons, bookPopupCover,
          bookPopupDescriptionText, bookPopupHeaderText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
