// Generated by view binder compiler. Do not edit!
package org.geometerplus.zlibrary.ui.android.aplicatii.romanesti.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.geometerplus.zlibrary.ui.android.aplicatii.romanesti.R;

public final class TipBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final OkCancelButtonsBinding tipButtons;

  @NonNull
  public final CheckBox tipCheckbox;

  @NonNull
  public final TextView tipText;

  private TipBinding(@NonNull ScrollView rootView, @NonNull OkCancelButtonsBinding tipButtons,
      @NonNull CheckBox tipCheckbox, @NonNull TextView tipText) {
    this.rootView = rootView;
    this.tipButtons = tipButtons;
    this.tipCheckbox = tipCheckbox;
    this.tipText = tipText;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static TipBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TipBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.tip, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TipBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tip_buttons;
      View tipButtons = ViewBindings.findChildViewById(rootView, id);
      if (tipButtons == null) {
        break missingId;
      }
      OkCancelButtonsBinding binding_tipButtons = OkCancelButtonsBinding.bind(tipButtons);

      id = R.id.tip_checkbox;
      CheckBox tipCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (tipCheckbox == null) {
        break missingId;
      }

      id = R.id.tip_text;
      TextView tipText = ViewBindings.findChildViewById(rootView, id);
      if (tipText == null) {
        break missingId;
      }

      return new TipBinding((ScrollView) rootView, binding_tipButtons, tipCheckbox, tipText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
