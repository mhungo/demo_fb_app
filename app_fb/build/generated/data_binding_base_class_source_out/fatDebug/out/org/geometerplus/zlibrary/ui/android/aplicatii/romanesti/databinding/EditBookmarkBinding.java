// Generated by view binder compiler. Do not edit!
package org.geometerplus.zlibrary.ui.android.aplicatii.romanesti.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TabHost;
import android.widget.TabWidget;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.geometerplus.zlibrary.ui.android.aplicatii.romanesti.R;

public final class EditBookmarkBinding implements ViewBinding {
  @NonNull
  private final TabHost rootView;

  @NonNull
  public final RelativeLayout editBookmarkContentDelete;

  @NonNull
  public final ListView editBookmarkContentStyle;

  @NonNull
  public final LinearLayout editBookmarkContentText;

  @NonNull
  public final Button editBookmarkDeleteButton;

  @NonNull
  public final Button editBookmarkSaveTextButton;

  @NonNull
  public final TabHost editBookmarkTabhost;

  @NonNull
  public final EditText editBookmarkText;

  @NonNull
  public final FrameLayout tabcontent;

  @NonNull
  public final TabWidget tabs;

  private EditBookmarkBinding(@NonNull TabHost rootView,
      @NonNull RelativeLayout editBookmarkContentDelete, @NonNull ListView editBookmarkContentStyle,
      @NonNull LinearLayout editBookmarkContentText, @NonNull Button editBookmarkDeleteButton,
      @NonNull Button editBookmarkSaveTextButton, @NonNull TabHost editBookmarkTabhost,
      @NonNull EditText editBookmarkText, @NonNull FrameLayout tabcontent,
      @NonNull TabWidget tabs) {
    this.rootView = rootView;
    this.editBookmarkContentDelete = editBookmarkContentDelete;
    this.editBookmarkContentStyle = editBookmarkContentStyle;
    this.editBookmarkContentText = editBookmarkContentText;
    this.editBookmarkDeleteButton = editBookmarkDeleteButton;
    this.editBookmarkSaveTextButton = editBookmarkSaveTextButton;
    this.editBookmarkTabhost = editBookmarkTabhost;
    this.editBookmarkText = editBookmarkText;
    this.tabcontent = tabcontent;
    this.tabs = tabs;
  }

  @Override
  @NonNull
  public TabHost getRoot() {
    return rootView;
  }

  @NonNull
  public static EditBookmarkBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EditBookmarkBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.edit_bookmark, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EditBookmarkBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_bookmark_content_delete;
      RelativeLayout editBookmarkContentDelete = ViewBindings.findChildViewById(rootView, id);
      if (editBookmarkContentDelete == null) {
        break missingId;
      }

      id = R.id.edit_bookmark_content_style;
      ListView editBookmarkContentStyle = ViewBindings.findChildViewById(rootView, id);
      if (editBookmarkContentStyle == null) {
        break missingId;
      }

      id = R.id.edit_bookmark_content_text;
      LinearLayout editBookmarkContentText = ViewBindings.findChildViewById(rootView, id);
      if (editBookmarkContentText == null) {
        break missingId;
      }

      id = R.id.edit_bookmark_delete_button;
      Button editBookmarkDeleteButton = ViewBindings.findChildViewById(rootView, id);
      if (editBookmarkDeleteButton == null) {
        break missingId;
      }

      id = R.id.edit_bookmark_save_text_button;
      Button editBookmarkSaveTextButton = ViewBindings.findChildViewById(rootView, id);
      if (editBookmarkSaveTextButton == null) {
        break missingId;
      }

      TabHost editBookmarkTabhost = (TabHost) rootView;

      id = R.id.edit_bookmark_text;
      EditText editBookmarkText = ViewBindings.findChildViewById(rootView, id);
      if (editBookmarkText == null) {
        break missingId;
      }

      id = android.R.id.tabcontent;
      FrameLayout tabcontent = ViewBindings.findChildViewById(rootView, id);
      if (tabcontent == null) {
        break missingId;
      }

      id = android.R.id.tabs;
      TabWidget tabs = ViewBindings.findChildViewById(rootView, id);
      if (tabs == null) {
        break missingId;
      }

      return new EditBookmarkBinding((TabHost) rootView, editBookmarkContentDelete,
          editBookmarkContentStyle, editBookmarkContentText, editBookmarkDeleteButton,
          editBookmarkSaveTextButton, editBookmarkTabhost, editBookmarkText, tabcontent, tabs);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
