// Generated by view binder compiler. Do not edit!
package org.geometerplus.zlibrary.ui.android.aplicatii.romanesti.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.geometerplus.zlibrary.ui.android.aplicatii.romanesti.R;

public final class BooksDirectoryFixBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final OkCancelButtonsBinding booksDirectoryFixButtons;

  @NonNull
  public final TextView booksDirectoryFixDirectory;

  @NonNull
  public final ImageButton booksDirectoryFixSelectButton;

  @NonNull
  public final TextView booksDirectoryFixText;

  private BooksDirectoryFixBinding(@NonNull ScrollView rootView,
      @NonNull OkCancelButtonsBinding booksDirectoryFixButtons,
      @NonNull TextView booksDirectoryFixDirectory,
      @NonNull ImageButton booksDirectoryFixSelectButton, @NonNull TextView booksDirectoryFixText) {
    this.rootView = rootView;
    this.booksDirectoryFixButtons = booksDirectoryFixButtons;
    this.booksDirectoryFixDirectory = booksDirectoryFixDirectory;
    this.booksDirectoryFixSelectButton = booksDirectoryFixSelectButton;
    this.booksDirectoryFixText = booksDirectoryFixText;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static BooksDirectoryFixBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BooksDirectoryFixBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.books_directory_fix, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BooksDirectoryFixBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.books_directory_fix_buttons;
      View booksDirectoryFixButtons = ViewBindings.findChildViewById(rootView, id);
      if (booksDirectoryFixButtons == null) {
        break missingId;
      }
      OkCancelButtonsBinding binding_booksDirectoryFixButtons = OkCancelButtonsBinding.bind(booksDirectoryFixButtons);

      id = R.id.books_directory_fix_directory;
      TextView booksDirectoryFixDirectory = ViewBindings.findChildViewById(rootView, id);
      if (booksDirectoryFixDirectory == null) {
        break missingId;
      }

      id = R.id.books_directory_fix_select_button;
      ImageButton booksDirectoryFixSelectButton = ViewBindings.findChildViewById(rootView, id);
      if (booksDirectoryFixSelectButton == null) {
        break missingId;
      }

      id = R.id.books_directory_fix_text;
      TextView booksDirectoryFixText = ViewBindings.findChildViewById(rootView, id);
      if (booksDirectoryFixText == null) {
        break missingId;
      }

      return new BooksDirectoryFixBinding((ScrollView) rootView, binding_booksDirectoryFixButtons,
          booksDirectoryFixDirectory, booksDirectoryFixSelectButton, booksDirectoryFixText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
