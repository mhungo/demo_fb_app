// Generated by view binder compiler. Do not edit!
package org.geometerplus.zlibrary.ui.android.aplicatii.romanesti.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.geometerplus.android.fbreader.SimplePopupWindow;
import org.geometerplus.zlibrary.ui.android.aplicatii.romanesti.R;

public final class SearchPanelBinding implements ViewBinding {
  @NonNull
  private final SimplePopupWindow rootView;

  @NonNull
  public final SimplePopupWindow searchPanel;

  @NonNull
  public final ImageView searchPanelClose;

  @NonNull
  public final ImageView searchPanelNext;

  @NonNull
  public final ImageView searchPanelPrevious;

  private SearchPanelBinding(@NonNull SimplePopupWindow rootView,
      @NonNull SimplePopupWindow searchPanel, @NonNull ImageView searchPanelClose,
      @NonNull ImageView searchPanelNext, @NonNull ImageView searchPanelPrevious) {
    this.rootView = rootView;
    this.searchPanel = searchPanel;
    this.searchPanelClose = searchPanelClose;
    this.searchPanelNext = searchPanelNext;
    this.searchPanelPrevious = searchPanelPrevious;
  }

  @Override
  @NonNull
  public SimplePopupWindow getRoot() {
    return rootView;
  }

  @NonNull
  public static SearchPanelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SearchPanelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.search_panel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SearchPanelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      SimplePopupWindow searchPanel = (SimplePopupWindow) rootView;

      id = R.id.search_panel_close;
      ImageView searchPanelClose = ViewBindings.findChildViewById(rootView, id);
      if (searchPanelClose == null) {
        break missingId;
      }

      id = R.id.search_panel_next;
      ImageView searchPanelNext = ViewBindings.findChildViewById(rootView, id);
      if (searchPanelNext == null) {
        break missingId;
      }

      id = R.id.search_panel_previous;
      ImageView searchPanelPrevious = ViewBindings.findChildViewById(rootView, id);
      if (searchPanelPrevious == null) {
        break missingId;
      }

      return new SearchPanelBinding((SimplePopupWindow) rootView, searchPanel, searchPanelClose,
          searchPanelNext, searchPanelPrevious);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
