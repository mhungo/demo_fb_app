// Generated by view binder compiler. Do not edit!
package org.geometerplus.zlibrary.ui.android.aplicatii.romanesti.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.geometerplus.android.fbreader.SimplePopupWindow;
import org.geometerplus.zlibrary.ui.android.aplicatii.romanesti.R;

public final class SelectionPanelBinding implements ViewBinding {
  @NonNull
  private final SimplePopupWindow rootView;

  @NonNull
  public final SimplePopupWindow selectionPanel;

  @NonNull
  public final ImageView selectionPanelBookmark;

  @NonNull
  public final ImageView selectionPanelClose;

  @NonNull
  public final ImageView selectionPanelCopy;

  @NonNull
  public final ImageView selectionPanelShare;

  @NonNull
  public final ImageView selectionPanelTranslate;

  private SelectionPanelBinding(@NonNull SimplePopupWindow rootView,
      @NonNull SimplePopupWindow selectionPanel, @NonNull ImageView selectionPanelBookmark,
      @NonNull ImageView selectionPanelClose, @NonNull ImageView selectionPanelCopy,
      @NonNull ImageView selectionPanelShare, @NonNull ImageView selectionPanelTranslate) {
    this.rootView = rootView;
    this.selectionPanel = selectionPanel;
    this.selectionPanelBookmark = selectionPanelBookmark;
    this.selectionPanelClose = selectionPanelClose;
    this.selectionPanelCopy = selectionPanelCopy;
    this.selectionPanelShare = selectionPanelShare;
    this.selectionPanelTranslate = selectionPanelTranslate;
  }

  @Override
  @NonNull
  public SimplePopupWindow getRoot() {
    return rootView;
  }

  @NonNull
  public static SelectionPanelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SelectionPanelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.selection_panel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SelectionPanelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      SimplePopupWindow selectionPanel = (SimplePopupWindow) rootView;

      id = R.id.selection_panel_bookmark;
      ImageView selectionPanelBookmark = ViewBindings.findChildViewById(rootView, id);
      if (selectionPanelBookmark == null) {
        break missingId;
      }

      id = R.id.selection_panel_close;
      ImageView selectionPanelClose = ViewBindings.findChildViewById(rootView, id);
      if (selectionPanelClose == null) {
        break missingId;
      }

      id = R.id.selection_panel_copy;
      ImageView selectionPanelCopy = ViewBindings.findChildViewById(rootView, id);
      if (selectionPanelCopy == null) {
        break missingId;
      }

      id = R.id.selection_panel_share;
      ImageView selectionPanelShare = ViewBindings.findChildViewById(rootView, id);
      if (selectionPanelShare == null) {
        break missingId;
      }

      id = R.id.selection_panel_translate;
      ImageView selectionPanelTranslate = ViewBindings.findChildViewById(rootView, id);
      if (selectionPanelTranslate == null) {
        break missingId;
      }

      return new SelectionPanelBinding((SimplePopupWindow) rootView, selectionPanel,
          selectionPanelBookmark, selectionPanelClose, selectionPanelCopy, selectionPanelShare,
          selectionPanelTranslate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
