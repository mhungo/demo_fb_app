// Generated by view binder compiler. Do not edit!
package org.geometerplus.zlibrary.ui.android.aplicatii.romanesti.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ListView;
import android.widget.TabHost;
import android.widget.TabWidget;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.geometerplus.zlibrary.ui.android.aplicatii.romanesti.R;

public final class BookmarksBinding implements ViewBinding {
  @NonNull
  private final TabHost rootView;

  @NonNull
  public final ListView bookmarksAllBooks;

  @NonNull
  public final FrameLayout bookmarksSearch;

  @NonNull
  public final ListView bookmarksSearchResults;

  @NonNull
  public final TabHost bookmarksTabhost;

  @NonNull
  public final ListView bookmarksThisBook;

  @NonNull
  public final FrameLayout tabcontent;

  @NonNull
  public final TabWidget tabs;

  private BookmarksBinding(@NonNull TabHost rootView, @NonNull ListView bookmarksAllBooks,
      @NonNull FrameLayout bookmarksSearch, @NonNull ListView bookmarksSearchResults,
      @NonNull TabHost bookmarksTabhost, @NonNull ListView bookmarksThisBook,
      @NonNull FrameLayout tabcontent, @NonNull TabWidget tabs) {
    this.rootView = rootView;
    this.bookmarksAllBooks = bookmarksAllBooks;
    this.bookmarksSearch = bookmarksSearch;
    this.bookmarksSearchResults = bookmarksSearchResults;
    this.bookmarksTabhost = bookmarksTabhost;
    this.bookmarksThisBook = bookmarksThisBook;
    this.tabcontent = tabcontent;
    this.tabs = tabs;
  }

  @Override
  @NonNull
  public TabHost getRoot() {
    return rootView;
  }

  @NonNull
  public static BookmarksBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BookmarksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bookmarks, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BookmarksBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bookmarks_all_books;
      ListView bookmarksAllBooks = ViewBindings.findChildViewById(rootView, id);
      if (bookmarksAllBooks == null) {
        break missingId;
      }

      id = R.id.bookmarks_search;
      FrameLayout bookmarksSearch = ViewBindings.findChildViewById(rootView, id);
      if (bookmarksSearch == null) {
        break missingId;
      }

      id = R.id.bookmarks_search_results;
      ListView bookmarksSearchResults = ViewBindings.findChildViewById(rootView, id);
      if (bookmarksSearchResults == null) {
        break missingId;
      }

      TabHost bookmarksTabhost = (TabHost) rootView;

      id = R.id.bookmarks_this_book;
      ListView bookmarksThisBook = ViewBindings.findChildViewById(rootView, id);
      if (bookmarksThisBook == null) {
        break missingId;
      }

      id = android.R.id.tabcontent;
      FrameLayout tabcontent = ViewBindings.findChildViewById(rootView, id);
      if (tabcontent == null) {
        break missingId;
      }

      id = android.R.id.tabs;
      TabWidget tabs = ViewBindings.findChildViewById(rootView, id);
      if (tabs == null) {
        break missingId;
      }

      return new BookmarksBinding((TabHost) rootView, bookmarksAllBooks, bookmarksSearch,
          bookmarksSearchResults, bookmarksTabhost, bookmarksThisBook, tabcontent, tabs);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
