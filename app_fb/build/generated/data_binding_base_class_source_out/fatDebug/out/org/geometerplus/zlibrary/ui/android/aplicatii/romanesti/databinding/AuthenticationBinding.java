// Generated by view binder compiler. Do not edit!
package org.geometerplus.zlibrary.ui.android.aplicatii.romanesti.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.geometerplus.zlibrary.ui.android.aplicatii.romanesti.R;

public final class AuthenticationBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final OkCancelButtonsBinding authenticationButtons;

  @NonNull
  public final TextView authenticationError;

  @NonNull
  public final EditText authenticationPassword;

  @NonNull
  public final TextView authenticationPasswordLabel;

  @NonNull
  public final TextView authenticationSubtitle;

  @NonNull
  public final TextView authenticationUnencryptedWarning;

  @NonNull
  public final EditText authenticationUsername;

  @NonNull
  public final TextView authenticationUsernameLabel;

  @NonNull
  public final TextView networkAuthenticationError;

  private AuthenticationBinding(@NonNull ScrollView rootView,
      @NonNull OkCancelButtonsBinding authenticationButtons, @NonNull TextView authenticationError,
      @NonNull EditText authenticationPassword, @NonNull TextView authenticationPasswordLabel,
      @NonNull TextView authenticationSubtitle, @NonNull TextView authenticationUnencryptedWarning,
      @NonNull EditText authenticationUsername, @NonNull TextView authenticationUsernameLabel,
      @NonNull TextView networkAuthenticationError) {
    this.rootView = rootView;
    this.authenticationButtons = authenticationButtons;
    this.authenticationError = authenticationError;
    this.authenticationPassword = authenticationPassword;
    this.authenticationPasswordLabel = authenticationPasswordLabel;
    this.authenticationSubtitle = authenticationSubtitle;
    this.authenticationUnencryptedWarning = authenticationUnencryptedWarning;
    this.authenticationUsername = authenticationUsername;
    this.authenticationUsernameLabel = authenticationUsernameLabel;
    this.networkAuthenticationError = networkAuthenticationError;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static AuthenticationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AuthenticationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.authentication, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AuthenticationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.authentication_buttons;
      View authenticationButtons = ViewBindings.findChildViewById(rootView, id);
      if (authenticationButtons == null) {
        break missingId;
      }
      OkCancelButtonsBinding binding_authenticationButtons = OkCancelButtonsBinding.bind(authenticationButtons);

      id = R.id.authentication_error;
      TextView authenticationError = ViewBindings.findChildViewById(rootView, id);
      if (authenticationError == null) {
        break missingId;
      }

      id = R.id.authentication_password;
      EditText authenticationPassword = ViewBindings.findChildViewById(rootView, id);
      if (authenticationPassword == null) {
        break missingId;
      }

      id = R.id.authentication_password_label;
      TextView authenticationPasswordLabel = ViewBindings.findChildViewById(rootView, id);
      if (authenticationPasswordLabel == null) {
        break missingId;
      }

      id = R.id.authentication_subtitle;
      TextView authenticationSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (authenticationSubtitle == null) {
        break missingId;
      }

      id = R.id.authentication_unencrypted_warning;
      TextView authenticationUnencryptedWarning = ViewBindings.findChildViewById(rootView, id);
      if (authenticationUnencryptedWarning == null) {
        break missingId;
      }

      id = R.id.authentication_username;
      EditText authenticationUsername = ViewBindings.findChildViewById(rootView, id);
      if (authenticationUsername == null) {
        break missingId;
      }

      id = R.id.authentication_username_label;
      TextView authenticationUsernameLabel = ViewBindings.findChildViewById(rootView, id);
      if (authenticationUsernameLabel == null) {
        break missingId;
      }

      id = R.id.network_authentication_error;
      TextView networkAuthenticationError = ViewBindings.findChildViewById(rootView, id);
      if (networkAuthenticationError == null) {
        break missingId;
      }

      return new AuthenticationBinding((ScrollView) rootView, binding_authenticationButtons,
          authenticationError, authenticationPassword, authenticationPasswordLabel,
          authenticationSubtitle, authenticationUnencryptedWarning, authenticationUsername,
          authenticationUsernameLabel, networkAuthenticationError);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
