apply plugin: 'com.android.library'

android {
	compileSdkVersion project.ext.globalCompileSdkVersion
	buildToolsVersion project.ext.globalBuildToolsVersion
	ndkVersion project.ext.globalNdkVersion

	lintOptions {
		abortOnError false
	}

	sourceSets {
		main.java.srcDirs = ['src/main/java']
		main.aidl.srcDirs = ['src/main/java']
		main.res.srcDirs = ['src/main/res']
		//main.jniLibs.srcDirs = ['src/main/libs'] //https://stackoverflow.com/questions/44954122/more-than-one-file-was-found-with-os-independent-path-lib-x86-libusb-so
		main.jni.srcDirs = []
		main.manifest.srcFile 'src/main/AndroidManifest.xml'
	}

	defaultConfig {
		minSdkVersion project.ext.globalMinSdkVersion
		//maxSdkVersion project.ext.globalMaxSdkVersion
		targetSdkVersion project.ext.globalTargetSdkVersion
		//aplicatii.romanesti:
        //multiDexEnabled project.ext.globalMultiDexEnabled

		versionCode 1
		versionName "1.0"
		externalNativeBuild { //parallel ndk builds; decrease the value or remove if dependency errors
			ndkBuild {
				arguments "-j6"
			}
		}
	}

	externalNativeBuild {
		ndkBuild {
			path 'src/main/jni/Android.mk'
		}
	}

//	task ndkBuild(type: Exec) {
//		def ndkDir = project.android.ndkDirectory.absolutePath
//		commandLine "$ndkDir\\ndk-build.cmd", '-C', file('src/main/jni').absolutePath
//	}
//
//	tasks.withType(JavaCompile) {
//		compileTask -> compileTask.dependsOn ndkBuild
//	}

	clean {
		delete 'src/main/obj'
		delete 'src/main/libs'
	}
}
